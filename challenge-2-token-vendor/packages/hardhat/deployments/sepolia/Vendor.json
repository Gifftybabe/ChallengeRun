{
  "address": "0x3118F381c4ac62A6EE23a6993489196839909270",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfTokens",
          "type": "uint256"
        }
      ],
      "name": "BuyTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfETH",
          "type": "uint256"
        }
      ],
      "name": "SellTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "checkAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yourToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa3905d88dc57685cf9e63b7616d602386fdc4b1d60659275ddaa9a16a5596da4",
  "receipt": {
    "to": null,
    "from": "0x1F7cf24Cd9C60F48F0E82f7d1d1e037BC150cC70",
    "contractAddress": "0x3118F381c4ac62A6EE23a6993489196839909270",
    "transactionIndex": 47,
    "gasUsed": "712480",
    "logsBloom": "0x
    "blockHash": "0x4c9bdd4f1afb81c9590587e446eb411a4942e8e8273819cd40d2d8a17036499a",
    "transactionHash": "0xa3905d88dc57685cf9e63b7616d602386fdc4b1d60659275ddaa9a16a5596da4",
    "logs": [
      {
        "transactionIndex": 47,
        "blockNumber": 7489174,
        "transactionHash": "0xa3905d88dc57685cf9e63b7616d602386fdc4b1d60659275ddaa9a16a5596da4",
        "address": "0x3118F381c4ac62A6EE23a6993489196839909270",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001f7cf24cd9c60f48f0e82f7d1d1e037bc150cc70"
        ],
        "data": "0x",
        "logIndex": 112,
        "blockHash": "0x4c9bdd4f1afb81c9590587e446eb411a4942e8e8273819cd40d2d8a17036499a"
      }
    ],
    "blockNumber": 7489174,
    "cumulativeGasUsed": "6483021",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD9Db1D0559a6449d12426e295B0c4FF35cd726C1"
  ],
  "numDeployments": 1,
  "solcInputHash": "49f35b96b61b6db2c06c851d67184efe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"BuyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"}],\"name\":\"SellTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yourToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vendor.sol\":\"Vendor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/Vendor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Vendor is Ownable {\\n    IERC20 public yourToken;\\n    uint256 public constant tokensPerEth = 100;\\n\\n    event BuyTokens(address buyer, uint256 amountOfETH, uint256 amountOfTokens);\\n    event SellTokens(address seller, uint256 amountOfTokens, uint256 amountOfETH);\\n\\n    constructor(address tokenAddress) {\\n        yourToken = IERC20(tokenAddress);\\n    }\\n\\n    function buyTokens() public payable {\\n        require(msg.value > 0, \\\"Send ETH to buy tokens\\\");\\n        \\n        // Calculate tokens to buy (needs to account for decimals)\\n        uint256 amountToBuy = (msg.value * tokensPerEth * 10**18) / 1 ether; // Fixed calculation\\n        uint256 vendorBalance = yourToken.balanceOf(address(this));\\n        require(vendorBalance >= amountToBuy, \\\"Vendor has insufficient tokens\\\");\\n\\n        bool sent = yourToken.transfer(msg.sender, amountToBuy);\\n        require(sent, \\\"Token transfer failed\\\");\\n\\n        emit BuyTokens(msg.sender, msg.value, amountToBuy);\\n    }\\n\\n    function sellTokens(uint256 tokenAmount) public {\\n        require(tokenAmount > 0, \\\"Specify an amount of tokens greater than zero\\\");\\n        require(yourToken.allowance(msg.sender, address(this)) >= tokenAmount, \\\"Check the token allowance\\\");\\n        \\n        // Calculate ETH to return (needs to account for decimals)\\n        uint256 ethToReturn = (tokenAmount * 1 ether) / (tokensPerEth * 10**18); // Fixed calculation\\n        require(address(this).balance >= ethToReturn, \\\"Vendor has insufficient ETH balance\\\");\\n        \\n        bool sent = yourToken.transferFrom(msg.sender, address(this), tokenAmount);\\n        require(sent, \\\"Token transfer failed\\\");\\n        \\n        (bool success,) = msg.sender.call{value: ethToReturn}(\\\"\\\");\\n        require(success, \\\"ETH transfer failed\\\");\\n        \\n        emit SellTokens(msg.sender, tokenAmount, ethToReturn);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No ETH to withdraw\\\");\\n        \\n        (bool success,) = msg.sender.call{value: balance}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n    }\\n\\n    function checkAllowance(address owner) public view returns (uint256) {\\n        return yourToken.allowance(owner, address(this));\\n    }\\n}\",\"keccak256\":\"0x8f181590db7183f85857d4b42ef7ea307be9f0bc9a1bececfba212ff063e021b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bf1380380610bf183398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b610b07806100ea6000396000f3fe6080604052600436106100865760003560e01c80637879e84b116100595780637879e84b1461010a5780638da5cb5b14610142578063cbdd69b514610160578063d0febe4c14610175578063f2fde38b1461017d57600080fd5b80631a197a261461008b5780633ccfd60b146100be5780636c11bcd3146100d5578063715018a6146100f5575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610a08565b61019d565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d3610227565b005b3480156100e157600080fd5b506100d36100f0366004610a56565b610307565b34801561010157600080fd5b506100d3610672565b34801561011657600080fd5b5060015461012a906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b34801561014e57600080fd5b506000546001600160a01b031661012a565b34801561016c57600080fd5b506100ab606481565b6100d3610686565b34801561018957600080fd5b506100d3610198366004610a08565b6108e5565b600154604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440160206040518083038186803b1580156101e957600080fd5b505afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190610a6e565b92915050565b61022f61095e565b47806102775760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d80600081146102b9576040519150601f19603f3d011682016040523d82523d6000602084013e6102be565b606091505b50509050806103035760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015260640161026e565b5050565b6000811161036d5760405162461bcd60e51b815260206004820152602d60248201527f5370656369667920616e20616d6f756e74206f6620746f6b656e73206772656160448201526c746572207468616e207a65726f60981b606482015260840161026e565b600154604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610a6e565b101561043c5760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000604482015260640161026e565b60006104516064670de0b6b3a7640000610aa6565b61046383670de0b6b3a7640000610aa6565b61046d9190610a86565b9050804710156104cb5760405162461bcd60e51b815260206004820152602360248201527f56656e646f722068617320696e73756666696369656e74204554482062616c616044820152626e636560e81b606482015260840161026e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610a36565b90508061059d5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161026e565b604051600090339084908381818185875af1925050503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b505090508061062b5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161026e565b60408051338152602081018690529081018490527fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee59060600160405180910390a150505050565b61067a61095e565b61068460006109b8565b565b600034116106cf5760405162461bcd60e51b815260206004820152601660248201527553656e642045544820746f2062757920746f6b656e7360501b604482015260640161026e565b6000670de0b6b3a76400006106e5606434610aa6565b6106f790670de0b6b3a7640000610aa6565b6107019190610a86565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190610a6e565b9050818110156107d45760405162461bcd60e51b815260206004820152601e60248201527f56656e646f722068617320696e73756666696369656e7420746f6b656e730000604482015260640161026e565b60015460405163a9059cbb60e01b8152336004820152602481018490526000916001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108599190610a36565b9050806108a05760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161026e565b604080513381523460208201529081018490527f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec779060600160405180910390a1505050565b6108ed61095e565b6001600160a01b0381166109525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161026e565b61095b816109b8565b50565b6000546001600160a01b031633146106845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a19578081fd5b81356001600160a01b0381168114610a2f578182fd5b9392505050565b600060208284031215610a47578081fd5b81518015158114610a2f578182fd5b600060208284031215610a67578081fd5b5035919050565b600060208284031215610a7f578081fd5b5051919050565b600082610aa157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610acc57634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220ddb130a40e618092db11bbdcb5aae92fe678f36c5a175969ba451aebaa9b277064736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80637879e84b116100595780637879e84b1461010a5780638da5cb5b14610142578063cbdd69b514610160578063d0febe4c14610175578063f2fde38b1461017d57600080fd5b80631a197a261461008b5780633ccfd60b146100be5780636c11bcd3146100d5578063715018a6146100f5575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610a08565b61019d565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d3610227565b005b3480156100e157600080fd5b506100d36100f0366004610a56565b610307565b34801561010157600080fd5b506100d3610672565b34801561011657600080fd5b5060015461012a906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b34801561014e57600080fd5b506000546001600160a01b031661012a565b34801561016c57600080fd5b506100ab606481565b6100d3610686565b34801561018957600080fd5b506100d3610198366004610a08565b6108e5565b600154604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440160206040518083038186803b1580156101e957600080fd5b505afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190610a6e565b92915050565b61022f61095e565b47806102775760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d80600081146102b9576040519150601f19603f3d011682016040523d82523d6000602084013e6102be565b606091505b50509050806103035760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015260640161026e565b5050565b6000811161036d5760405162461bcd60e51b815260206004820152602d60248201527f5370656369667920616e20616d6f756e74206f6620746f6b656e73206772656160448201526c746572207468616e207a65726f60981b606482015260840161026e565b600154604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156103b657600080fd5b505afa1580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610a6e565b101561043c5760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000604482015260640161026e565b60006104516064670de0b6b3a7640000610aa6565b61046383670de0b6b3a7640000610aa6565b61046d9190610a86565b9050804710156104cb5760405162461bcd60e51b815260206004820152602360248201527f56656e646f722068617320696e73756666696369656e74204554482062616c616044820152626e636560e81b606482015260840161026e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610a36565b90508061059d5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161026e565b604051600090339084908381818185875af1925050503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b505090508061062b5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161026e565b60408051338152602081018690529081018490527fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee59060600160405180910390a150505050565b61067a61095e565b61068460006109b8565b565b600034116106cf5760405162461bcd60e51b815260206004820152601660248201527553656e642045544820746f2062757920746f6b656e7360501b604482015260640161026e565b6000670de0b6b3a76400006106e5606434610aa6565b6106f790670de0b6b3a7640000610aa6565b6107019190610a86565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190610a6e565b9050818110156107d45760405162461bcd60e51b815260206004820152601e60248201527f56656e646f722068617320696e73756666696369656e7420746f6b656e730000604482015260640161026e565b60015460405163a9059cbb60e01b8152336004820152602481018490526000916001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108599190610a36565b9050806108a05760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161026e565b604080513381523460208201529081018490527f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec779060600160405180910390a1505050565b6108ed61095e565b6001600160a01b0381166109525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161026e565b61095b816109b8565b50565b6000546001600160a01b031633146106845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a19578081fd5b81356001600160a01b0381168114610a2f578182fd5b9392505050565b600060208284031215610a47578081fd5b81518015158114610a2f578182fd5b600060208284031215610a67578081fd5b5035919050565b600060208284031215610a7f578081fd5b5051919050565b600082610aa157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610acc57634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220ddb130a40e618092db11bbdcb5aae92fe678f36c5a175969ba451aebaa9b277064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Vendor.sol:Vendor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 841,
        "contract": "contracts/Vendor.sol:Vendor",
        "label": "yourToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)777"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)777": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}